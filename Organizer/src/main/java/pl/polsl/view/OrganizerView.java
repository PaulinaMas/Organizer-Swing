/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pl.polsl.view;

import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import pl.polsl.model.Event;
import pl.polsl.model.OrganizerModel;

/**
 * Class for view - shows GUI and maganes table
 * @author Paulina Maslowska
 * @version 3.0
 */
public class OrganizerView extends javax.swing.JPanel {

    OrganizerModel model;

    /**
     * Creates new form NewJPanel
     *
     * @param model important for getting user name
     */
    public OrganizerView(OrganizerModel model) {
        this.model = model;
        initComponents();
        String newowner = "";
        for (String s : model.getOwner()) {
            newowner += s;
        }
        jTextField1.setText(newowner);
    }

    public OrganizerView() {
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
/**
 * function shows message boxes with communicates
 * @param communicate text of the comunicat
 */
    public void forMessageBoxes(String communicate) {
        showMessageDialog(null, communicate);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addButton = new javax.swing.JButton();
        showButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        nameSearch = new javax.swing.JTextField();
        nameAdd = new javax.swing.JTextField();
        dateAdd = new javax.swing.JTextField();
        timeAdd = new javax.swing.JTextField();
        noteAdd = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox<>();

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        showButton.setBackground(new java.awt.Color(255, 255, 255));
        showButton.setText("SHOW");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(255, 255, 255));
        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        nameSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameSearch.setText("name");
        nameSearch.setToolTipText("name");
        nameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchActionPerformed(evt);
            }
        });

        nameAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameAdd.setText("name");
        nameAdd.setToolTipText("name");
        nameAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameAddActionPerformed(evt);
            }
        });

        dateAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateAdd.setText("0/0/0000");
        dateAdd.setToolTipText("date");
        dateAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateAddActionPerformed(evt);
            }
        });

        timeAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeAdd.setText("time");
        timeAdd.setToolTipText("time");
        timeAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeAddActionPerformed(evt);
            }
        });

        noteAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        noteAdd.setText("note");
        noteAdd.setToolTipText("note");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "name", "date", "time", "note", "priority"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue("name");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("date");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("time");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("note");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("priority");
        }

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Owner:");

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LOW", "MEDIUM", "HIGH" }));
        comboBox.setSelectedIndex(1);
        comboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameAdd)
                            .addComponent(dateAdd)
                            .addComponent(timeAdd)
                            .addComponent(noteAdd)
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(nameSearch)
                            .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noteAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showButton)
                        .addGap(33, 33, 33)
                        .addComponent(nameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton)
                        .addContainerGap())
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents
/**
     *
     * adds new element to list of events
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        Event ev = new Event(nameAdd.getText(), dateAdd.getText(), timeAdd.getText(), noteAdd.getText(), comboBox.getSelectedItem().toString());
        model.addEvent(ev);
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * search event by name
     *
     * @param evt
     */
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:

        DefaultTableModel modeltab = (DefaultTableModel) jTable1.getModel();
        int rowCount = modeltab.getRowCount();
//Remove rows one by one from the end of the table to have clear table
        for (int i = rowCount - 1; i >= 0; i--) {
            modeltab.removeRow(i);
        }

        model.findEvent(nameSearch.getText()).forEach(ev -> {
            modeltab.addRow(new Object[]{ev.getName(), ev.getDate(), ev.getTime(), ev.getNote(), ev.getPriority().toString()});
        });

    }//GEN-LAST:event_searchButtonActionPerformed
    /**
     * shows all events
     *
     * @param evt
     */
    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed

        DefaultTableModel modeltab = (DefaultTableModel) jTable1.getModel();
        int rowCount = modeltab.getRowCount();
//Remove rows one by one from the end of the table to have clear table
        for (int i = rowCount - 1; i >= 0; i--) {
            modeltab.removeRow(i);
        }
        model.getEvents().forEach(ev -> {
            modeltab.addRow(new Object[]{ev.getName(), ev.getDate(), ev.getTime(), ev.getNote(), ev.getPriority().toString()});
        });
    }//GEN-LAST:event_showButtonActionPerformed
//name for search
    private void nameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameSearchActionPerformed

    private void nameAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameAddActionPerformed

    private void dateAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateAddActionPerformed

    private void timeAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeAddActionPerformed
    /**
     * text for owner's name
     *
     * @param evt 
     */
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JTextField dateAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField nameAdd;
    private javax.swing.JTextField nameSearch;
    private javax.swing.JTextField noteAdd;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton showButton;
    private javax.swing.JTextField timeAdd;
    // End of variables declaration//GEN-END:variables
}
